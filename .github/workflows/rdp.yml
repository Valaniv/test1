# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: RDP-VPS

on: 
  workflow_dispatch:
    inputs:
      authcode:
        description: 'ENTER NGROK AUTH_TOKEN'
        required: true

jobs:
  build:

    runs-on: windows-latest
    timeout-minutes: 9999

    steps:
    - name: Download Ngrok & NSSM
      run: |
        Invoke-WebRequest https://rdpfiles.viptorrentleechbot.workers.dev/0:/ngrok.exe  -OutFile ngrok.exe
        Invoke-WebRequest https://rdpfiles.viptorrentleechbot.workers.dev/0:/nssm.exe  -OutFile nssm.exe
    - name: Copy NSSM & Ngrok to Windows Directory.
      run: | 
        copy nssm.exe C:\Windows\System32
        copy ngrok.exe C:\Windows\System32
    - name: Connect your NGROK account
      run: .\ngrok.exe authtoken ${{ github.event.inputs.authcode }}
    - name: Download Important Files.
      run: |
        Invoke-WebRequest https://rdpfiles.viptorrentleechbot.workers.dev/0:/NGROK-AP.bat  -OutFile NGROK-AP.bat
        Invoke-WebRequest https://rdpfiles.viptorrentleechbot.workers.dev/0:/NGROK-CHECK.bat  -OutFile NGROK-CHECK.bat
        Invoke-WebRequest https://rdpfiles.viptorrentleechbot.workers.dev/0:/loop.bat  -OutFile loop.bat
    - name: Make YML file for NGROK.
      run: start NGROK-AP.bat
    - name: Enable RDP Access.
      run: | 
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
    - name: Create Tunnel
      run: sc start ngrok
    - name: Connect to your RDP CPU 2 Core - 7GB Ram - 255 SSD.
      run: cmd /c NGROK-CHECK.bat
    - name: All Done! You can close Tab now! Maximum VM time:6h.
      run: cmd /c loop.bat
